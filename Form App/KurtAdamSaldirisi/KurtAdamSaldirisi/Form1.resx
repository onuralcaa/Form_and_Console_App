<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxWolfMan.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6fUK3wH9m3yXElNOP//Z
</value>
  </data>
</root>